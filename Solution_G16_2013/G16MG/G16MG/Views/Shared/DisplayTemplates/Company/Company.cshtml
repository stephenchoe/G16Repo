@model G16_2013.Models.MemberModel.CompanyViewModel

<div id="divCompany">
    <table class="table table-striped table-hover" id="tableCompany">
        <thead>
            <tr>
                <th></th>
                <th>@Html.LabelFor(m => m.Name)</th>
        
                <th>@Html.LabelFor(m => m.CompanyTypeName)</th>
                <th>@Html.LabelFor(m => m.StatusText)</th>
               
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                   
                    <button type="button" class="btn btn-default btn-sm" id="btnEditCompany">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </button>
                 

                </td>
                <td>@Html.DisplayFor(m => m.ParentCompanyName) &nbsp;&nbsp;@Html.DisplayFor(m => m.Name)</td>
                           
                <td>@Html.DisplayFor(m => m.CompanyTypeName)</td>
                <td>@Html.DisplayFor(m => m.StatusText)</td>
            </tr>
        </tbody>
    </table>
</div>
<!-- 顯示公司修改成功/失敗訊息提示 -->
@if (TempData["message"] != null)
    {     
        @Html.Action("StatusAlert", "Base", new { status = TempData["message"],positionId="#tableCompany" })     
    }
<!-- -------------------------- -->
@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(
        @<script type="text/javascript">

            $("#btnEditCompany").click(function (e) {
                e.preventDefault();


                var actionUrl='@Url.Action("EditCompany", "Company", new { id = Model.CompanyId })'
                var type = "GET";
                var divToReplace = $("#divCompany");


                AsyncUpdate(actionUrl, type, divToReplace);

            })
        </script>
, true);
}
